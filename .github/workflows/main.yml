name: workflownameH
on: workflow_dispatch
env:
  AWS_REGION: us-east-1
jobs:
  Testing:
    runs-on: ubuntu-latest
    steps:
      - name: Code checkout
        uses: actions/checkout@v4     ####Tools from Github marketplace. to clone from repository

      - name: Maven test  # Ubuntu runner has already maven is perbuild and run the Maven
        run: mvn test

      - name: Checkstyle
        run: mvn checkstyle:checkstyle  # To run the maven command

        #add the job to do sonarqube analysis. Before even if we set the sonar scaner tool make seure java 11 ia available.
      - name: set java 11
        uses: actions/setup-java@v3
        with:
         distribution: 'temurin' # See 'Supported distributions' for available options
         java-version: '11'

         # Setup sonar-scanner
      - name: Setup SonarQube
        uses: warchant/setup-sonar-scanner@v7

         # Run sonar-scanner
      - name: SonarQube Scan
        run: sonar-scanner
         -Dsonar.host.url=${{ secrets.SONAR_URL }}
         -Dsonar.login=${{ secrets.SONAR_TOKEN }}
         -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
         -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
         -Dsonar.sources=$GITHUB_WORKSPACE
         -Dsonar.sources=src/
         -Dsonar.junit.reportsPath=target/surefire-reports/ 
         -Dsonar.jacoco.reportsPath=target/jacoco.exec 
         -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml
         -Dsonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest/

            # Check the Quality Gate status.
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        # Force to fail step after specific time.
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_URL }} #OPTIONAL
        # Build job for creating the image 
        BUILD_AND_PUBLISH:
          needs: Testing
          run-on: ubuntu-latest
          steps:
            - name: Code checkout
              uses: actions/checkout@v4

        # Search for values in application property and replace it values that we store it in secret the RDS values.
            - name: Update application.properties file # To run the sed command to replace the actual RDS database name.
              run: |
                sed -i "s/^jdbc.username.*$/jdbc.username\=${{ secrets.RDS_USER }}/" src/main/resources/application.properties   
                sed -i "s/^jdbc.password.*$/jdbc.password\=${{ secrets.RDS_PASS }}/" src/main/resources/application.properties
                sed -i "s/db01/${{ secrets.RDS_ENDPOINT }}/" src/main/resources/application.properties

            - name: upload image to ECR
              uses: appleboy/docker-ecr-action@master
              with:
              access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
              secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              registry: ${{ secrets.REGISTRY }}
              repo: actapp
              region: ${{ env.AWS_REGION }}
              tags: latest,${{github.run_number }}
              auto_tag: true
              daemon_off: false
              dockerfile: ./Dockerfile
              context: ./